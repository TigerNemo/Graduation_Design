{"remainingRequest":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\babel-loader\\lib\\index.js!D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page1\\lines.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page1\\lines.vue","mtime":1634579530000},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647520168838},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1647520169854},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647520168838},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1647520170108}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["lines.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"lines\">\n        <div class=\"switchButton\">\n            <a :class=\"{'active':value==1}\" @click=\"handleSelect(1)\">月</a><a :class=\"{'active':value==2}\"\n                                                                             @click=\"handleSelect(2)\">日</a>\n        </div>\n        <div id=\"bottom_1\">\n\n        </div>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: '',\n    data() {\n        return {\n            value: 2,\n            xAxisData: [],\n            seriesData: [],\n            selected: {},\n            legendData: []\n        }\n    },\n    methods: {\n        handleSelect(val) {\n            this.xAxisData = [];\n            this.seriesData = [];\n            this.legendData = [];\n            this.selected = {};\n            this.value = val;\n            let curYear = new Date().getFullYear();\n            let curMonth = new Date().getMonth();\n\n            let colorList = ['#bf232a', '#feed2c', '#2c7bfe', '#feac2c', '#ff7b7e', '#2cd9fe', '#a262f2', '#2ca8fe'];\n            if (val == 1) {\n                let year = [curYear - 1, curYear];\n                for (let i = 0; i < 12; i++) {\n                    this.xAxisData.push((i + 1) + '月');\n                }\n                for (let i = 0; i < year.length; i++) {\n                    this.legendData.push(year[i] + '年');\n                    let obj = {\n                        name: year[i] + '年',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < 12; j++) {\n                        obj.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    let obj1 = {\n                        name: year[i] + '年',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        xAxisIndex: 1,\n                        yAxisIndex: 1,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < 12; j++) {\n                        obj1.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    this.seriesData.push(obj);\n                    this.seriesData.push(obj1);\n                }\n\n            } else {\n                let dateLength = new Date(curYear, curMonth, 0).getDate();\n                for (let i = 0; i < dateLength; i++) {\n                    this.xAxisData.push((i + 1) + '号');\n\n                }\n                for (let i = 0; i < 12; i++) {\n                    this.legendData.push((i + 1) + '月');\n                    this.selected[(i + 1) + '月'] = false;\n                    if (i < 4) {\n                        this.selected[(i + 1) + '月'] = true;\n                    }\n                    let obj = {\n                        name: (i + 1) + '月',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < dateLength; j++) {\n                        obj.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    let obj1 = {\n                        name: (i + 1) + '月',\n                        type: 'line',\n                        symbol: 'circle',\n                        xAxisIndex: 1,\n                        yAxisIndex: 1,\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < dateLength; j++) {\n                        obj1.data.push((Math.random() * 300).toFixed(0));\n                    }\n\n                    this.seriesData.push(obj);\n                    this.seriesData.push(obj1);\n                }\n\n            }\n            this.setChart()\n        },\n        // 金钱交易分析\n        setChart() {\n            let option = {\n                title: [\n                    {\n                        text: '【交易笔数分析】',\n                        textStyle: {\n                            fontSize: 12,\n                            color: '#75deef',\n                            fontWeight: 'normal'\n                        },\n                        top: '24%',\n                        left: '20%'\n                    },\n                    {\n                        text: '【交易金额分析】',\n                        textStyle: {\n                            fontSize: 12,\n                            color: '#75deef',\n                            fontWeight: 'normal'\n                        },\n                        top: '24%',\n                        right: '12%'\n                    },\n                ],\n                grid: [\n                    {\n                        show: false,\n                        left: '2%',\n                        top: '38%',\n                        right: '51%',\n                        bottom: 0,\n                        containLabel: true,\n                    },\n                    {\n                        show: false,\n                        left: '51%',\n                        top: \"38%\",\n                        bottom: 0,\n                        right: '2%',\n                        containLabel: true,\n\n                    },\n                ],\n                tooltip: {\n                    trigger: 'item',\n                    axisPointer: {\n                        type: 'none',\n\n                    },\n                    backgroundColor: '#11367a',\n                    formatter: (params) => {\n                        let seriesId = params.seriesId.substr(params.seriesId.length - 1, 1)\n                        if (seriesId == 0) {\n                            return params.seriesName + \"/\" + params.name + \"<br>\" + \"交易笔数:\" + params.value + '笔'\n                        } else {\n                            return params.seriesName + \"/\" + params.name + \"<br>\" + \"交易金额:\" + params.value + '元'\n                        }\n\n                    },\n                    textStyle: {\n                        color: '#6dd0e3',\n                        fontSize: 10,\n                    },\n                },\n                legend: {\n                    type: 'scroll',\n                    top: '10%',\n                    textStyle: {\n                        color: '#75deef',\n                        padding: [3, 0, 0, 0],\n                        fontSize: 12\n                    },\n                    pageTextStyle: {\n                        color: '#75deef'\n                    },\n                    pageIconSize: 10,\n                    pageIconColor: '#75deef',\n                    itemWidth: 12,\n                    itemHeight: 7,\n                    right: \"15%\",\n                    left: '15%',\n                    selected: this.selected,\n                    data: this.legendData\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: this.xAxisData,\n                        boundaryGap: false,\n                        axisLabel: {\n                            fontSize: 9,\n                            color: '#75deef',\n                            interval: 0,\n                            showMaxLabel: true,\n                            showMinLabel: true,\n                            formatter: (value, index) => {\n                                if (this.value == 1) {\n                                    if (index % 2 == 1) {\n                                        return value\n                                    }\n                                } else {\n                                    if ((index + 1) % 5 == 0) {\n                                        return value\n                                    }\n                                }\n                                if (index == 0) {\n                                    return value\n                                }\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: true,\n                            inside: true\n                        }\n                    },\n                    {\n                        gridIndex: 1,\n                        type: 'category',\n                        data: this.xAxisData,\n                        axisLabel: {\n                            fontSize: 9,\n                            color: '#75deef',\n                            interval: 0,\n                            showMaxLabel: true,\n                            showMinLabel: true,\n                            formatter: (value, index) => {\n                                if (this.value == 1) {\n                                    if (index % 2 == 1) {\n                                        return value\n                                    }\n                                } else {\n                                    if ((index + 1) % 5 == 0) {\n                                        return value\n                                    }\n                                }\n                                if (index == 0) {\n                                    return value\n                                }\n                            }\n                        },\n                        axisLine: {\n\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: true,\n                            inside: true\n                        }\n                    },\n\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        splitLine: {\n                            show: false,\n                        },\n                        min: 0,\n                        max: 300,\n                        splitNumber: 5,\n                        axisLabel: {\n                            showMaxLabel: false,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        name: '(笔)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 6, 0, 0]\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            length: 3,\n                        }\n                    },\n\n                    {\n                        gridIndex: 1,\n                        type: 'value',\n                        min: 0,\n                        max: 300,\n                        interval: 50,\n                        splitLine: {\n                            show: false,\n                        },\n                        axisLabel: {\n                            showMaxLabel: false,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        name: '(元)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 6, 0, 0]\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            length: 3,\n                        }\n                    },\n                ],\n                series: this.seriesData\n            };\n            let myChart = this.$echarts(document.getElementById('bottom_1'));\n\n            myChart.clear();\n            myChart.resize()\n            myChart.setOption(option);\n            myChart.on('legendselectchanged', (params) => {\n                let arr = [];\n                for (let i in params.selected) {\n                    if (params.selected[i] == true) {\n                        arr.push(params.selected[i])\n                    }\n                }\n                if (arr.length > 4) {\n                    this.$Modal.error({\n                        content: \"<p>当前最多显示4个图例</p>\"\n                    });\n                    myChart.dispatchAction({\n                        type: 'legendUnSelect',\n                        // 图例名称\n                        name: params.name\n                    })\n                }\n\n            });\n        },\n    },\n    mounted() {\n        this.handleSelect(this.value);\n        // this.setChart ();\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.lines {\n    height: 100%;\n    width: 100%;\n\n    #bottom_1 {\n        height: 100%;\n        width: 100%;\n    }\n\n    position: relative;\n\n    .switchButton {\n        position: absolute;\n        z-index: 5;\n        right: 10px;\n        top: 15px;\n        border: 1px solid #028bff;\n        border-radius: 5px;\n        padding: 0;\n\n        .active {\n            background: #0454a1;\n        }\n\n        a {\n            display: inline-block;\n            color: #fff;\n            padding: 1px 8px;\n        }\n\n    }\n}\n\n</style>"],"sourceRoot":"src/views/components/page1"}]}