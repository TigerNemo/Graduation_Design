{"remainingRequest":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page1\\lines.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page1\\lines.vue","mtime":1634579530000},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647520168838},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1647520169854},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647520168838},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1647520170108}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["lines.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"lines.vue","sourceRoot":"src/views/components/page1","sourcesContent":["<template>\n    <div class=\"lines\">\n        <div class=\"switchButton\">\n            <a :class=\"{'active':value==1}\" @click=\"handleSelect(1)\">月</a><a :class=\"{'active':value==2}\"\n                                                                             @click=\"handleSelect(2)\">日</a>\n        </div>\n        <div id=\"bottom_1\">\n\n        </div>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: '',\n    data() {\n        return {\n            value: 2,\n            xAxisData: [],\n            seriesData: [],\n            selected: {},\n            legendData: []\n        }\n    },\n    methods: {\n        handleSelect(val) {\n            this.xAxisData = [];\n            this.seriesData = [];\n            this.legendData = [];\n            this.selected = {};\n            this.value = val;\n            let curYear = new Date().getFullYear();\n            let curMonth = new Date().getMonth();\n\n            let colorList = ['#bf232a', '#feed2c', '#2c7bfe', '#feac2c', '#ff7b7e', '#2cd9fe', '#a262f2', '#2ca8fe'];\n            if (val == 1) {\n                let year = [curYear - 1, curYear];\n                for (let i = 0; i < 12; i++) {\n                    this.xAxisData.push((i + 1) + '月');\n                }\n                for (let i = 0; i < year.length; i++) {\n                    this.legendData.push(year[i] + '年');\n                    let obj = {\n                        name: year[i] + '年',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < 12; j++) {\n                        obj.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    let obj1 = {\n                        name: year[i] + '年',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        xAxisIndex: 1,\n                        yAxisIndex: 1,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < 12; j++) {\n                        obj1.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    this.seriesData.push(obj);\n                    this.seriesData.push(obj1);\n                }\n\n            } else {\n                let dateLength = new Date(curYear, curMonth, 0).getDate();\n                for (let i = 0; i < dateLength; i++) {\n                    this.xAxisData.push((i + 1) + '号');\n\n                }\n                for (let i = 0; i < 12; i++) {\n                    this.legendData.push((i + 1) + '月');\n                    this.selected[(i + 1) + '月'] = false;\n                    if (i < 4) {\n                        this.selected[(i + 1) + '月'] = true;\n                    }\n                    let obj = {\n                        name: (i + 1) + '月',\n                        type: 'line',\n                        symbol: 'circle',\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < dateLength; j++) {\n                        obj.data.push((Math.random() * 300).toFixed(0));\n                    }\n                    let obj1 = {\n                        name: (i + 1) + '月',\n                        type: 'line',\n                        symbol: 'circle',\n                        xAxisIndex: 1,\n                        yAxisIndex: 1,\n                        smooth: false,\n                        itemStyle: {\n                            color: colorList[i % 8]\n                        },\n                        lineStyle: {\n                            width: 1,\n                            color: colorList[i % 8],\n                        },\n                        data: []\n                    }\n                    for (let j = 0; j < dateLength; j++) {\n                        obj1.data.push((Math.random() * 300).toFixed(0));\n                    }\n\n                    this.seriesData.push(obj);\n                    this.seriesData.push(obj1);\n                }\n\n            }\n            this.setChart()\n        },\n        // 金钱交易分析\n        setChart() {\n            let option = {\n                title: [\n                    {\n                        text: '【交易笔数分析】',\n                        textStyle: {\n                            fontSize: 12,\n                            color: '#75deef',\n                            fontWeight: 'normal'\n                        },\n                        top: '24%',\n                        left: '20%'\n                    },\n                    {\n                        text: '【交易金额分析】',\n                        textStyle: {\n                            fontSize: 12,\n                            color: '#75deef',\n                            fontWeight: 'normal'\n                        },\n                        top: '24%',\n                        right: '12%'\n                    },\n                ],\n                grid: [\n                    {\n                        show: false,\n                        left: '2%',\n                        top: '38%',\n                        right: '51%',\n                        bottom: 0,\n                        containLabel: true,\n                    },\n                    {\n                        show: false,\n                        left: '51%',\n                        top: \"38%\",\n                        bottom: 0,\n                        right: '2%',\n                        containLabel: true,\n\n                    },\n                ],\n                tooltip: {\n                    trigger: 'item',\n                    axisPointer: {\n                        type: 'none',\n\n                    },\n                    backgroundColor: '#11367a',\n                    formatter: (params) => {\n                        let seriesId = params.seriesId.substr(params.seriesId.length - 1, 1)\n                        if (seriesId == 0) {\n                            return params.seriesName + \"/\" + params.name + \"<br>\" + \"交易笔数:\" + params.value + '笔'\n                        } else {\n                            return params.seriesName + \"/\" + params.name + \"<br>\" + \"交易金额:\" + params.value + '元'\n                        }\n\n                    },\n                    textStyle: {\n                        color: '#6dd0e3',\n                        fontSize: 10,\n                    },\n                },\n                legend: {\n                    type: 'scroll',\n                    top: '10%',\n                    textStyle: {\n                        color: '#75deef',\n                        padding: [3, 0, 0, 0],\n                        fontSize: 12\n                    },\n                    pageTextStyle: {\n                        color: '#75deef'\n                    },\n                    pageIconSize: 10,\n                    pageIconColor: '#75deef',\n                    itemWidth: 12,\n                    itemHeight: 7,\n                    right: \"15%\",\n                    left: '15%',\n                    selected: this.selected,\n                    data: this.legendData\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: this.xAxisData,\n                        boundaryGap: false,\n                        axisLabel: {\n                            fontSize: 9,\n                            color: '#75deef',\n                            interval: 0,\n                            showMaxLabel: true,\n                            showMinLabel: true,\n                            formatter: (value, index) => {\n                                if (this.value == 1) {\n                                    if (index % 2 == 1) {\n                                        return value\n                                    }\n                                } else {\n                                    if ((index + 1) % 5 == 0) {\n                                        return value\n                                    }\n                                }\n                                if (index == 0) {\n                                    return value\n                                }\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: true,\n                            inside: true\n                        }\n                    },\n                    {\n                        gridIndex: 1,\n                        type: 'category',\n                        data: this.xAxisData,\n                        axisLabel: {\n                            fontSize: 9,\n                            color: '#75deef',\n                            interval: 0,\n                            showMaxLabel: true,\n                            showMinLabel: true,\n                            formatter: (value, index) => {\n                                if (this.value == 1) {\n                                    if (index % 2 == 1) {\n                                        return value\n                                    }\n                                } else {\n                                    if ((index + 1) % 5 == 0) {\n                                        return value\n                                    }\n                                }\n                                if (index == 0) {\n                                    return value\n                                }\n                            }\n                        },\n                        axisLine: {\n\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: true,\n                            inside: true\n                        }\n                    },\n\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        splitLine: {\n                            show: false,\n                        },\n                        min: 0,\n                        max: 300,\n                        splitNumber: 5,\n                        axisLabel: {\n                            showMaxLabel: false,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        name: '(笔)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 6, 0, 0]\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            length: 3,\n                        }\n                    },\n\n                    {\n                        gridIndex: 1,\n                        type: 'value',\n                        min: 0,\n                        max: 300,\n                        interval: 50,\n                        splitLine: {\n                            show: false,\n                        },\n                        axisLabel: {\n                            showMaxLabel: false,\n                            fontSize: 9,\n                            color: '#75deef'\n                        },\n                        name: '(元)',\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: '#75deef',\n                            fontSize: 9,\n                            align: 'right',\n                            padding: [0, 6, 0, 0]\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            length: 3,\n                        }\n                    },\n                ],\n                series: this.seriesData\n            };\n            let myChart = this.$echarts(document.getElementById('bottom_1'));\n\n            myChart.clear();\n            myChart.resize()\n            myChart.setOption(option);\n            myChart.on('legendselectchanged', (params) => {\n                let arr = [];\n                for (let i in params.selected) {\n                    if (params.selected[i] == true) {\n                        arr.push(params.selected[i])\n                    }\n                }\n                if (arr.length > 4) {\n                    this.$Modal.error({\n                        content: \"<p>当前最多显示4个图例</p>\"\n                    });\n                    myChart.dispatchAction({\n                        type: 'legendUnSelect',\n                        // 图例名称\n                        name: params.name\n                    })\n                }\n\n            });\n        },\n    },\n    mounted() {\n        this.handleSelect(this.value);\n        // this.setChart ();\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.lines {\n    height: 100%;\n    width: 100%;\n\n    #bottom_1 {\n        height: 100%;\n        width: 100%;\n    }\n\n    position: relative;\n\n    .switchButton {\n        position: absolute;\n        z-index: 5;\n        right: 10px;\n        top: 15px;\n        border: 1px solid #028bff;\n        border-radius: 5px;\n        padding: 0;\n\n        .active {\n            background: #0454a1;\n        }\n\n        a {\n            display: inline-block;\n            color: #fff;\n            padding: 1px 8px;\n        }\n\n    }\n}\n\n</style>"]}]}