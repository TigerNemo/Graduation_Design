{"remainingRequest":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page3\\channelBar.vue?vue&type=style&index=0&id=1865f32a&lang=less&scoped=true&","dependencies":[{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\src\\views\\components\\page3\\channelBar.vue","mtime":1634579530000},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1647520169249},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1647520170567},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1647520169849},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":1647520169638},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647520168838},{"path":"D:\\softs\\vue-echarts\\vue-echarts-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1647520170108}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoubGVmdEJhciB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogNDUlOwogICAgZmxvYXQ6IGxlZnQ7Cn0K"},{"version":3,"sources":["channelBar.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA","file":"channelBar.vue","sourceRoot":"src/views/components/page3","sourcesContent":["<template>\n    <div class=\"leftBar\"></div>\n</template>\n\n<style lang=\"less\" scoped>\n.leftBar {\n    height: 100%;\n    width: 45%;\n    float: left;\n}\n</style>\n\n<script>\nexport default {\n    props: {\n        title: String,\n        data: Array,\n    },\n    name: '',\n    data() {\n        return {}\n    },\n    methods: {\n        setTrenchData(type) { // 数据\n            let arr = [];\n            let obj = {};\n            for (let i = 0; i < this.data.length; i++) {\n                switch (type) {\n                    case 't':\n                        obj = {\n                            subtext: this.data[i].subtitle,\n                            top: this.data[i].top,\n                            left: 10,\n                            subtextStyle: {\n                                color: '#8CBCCD',\n                                fontSize: 9\n                            }\n                        }\n                        break;\n                    case 'd':\n                        obj = this.data[i].data\n                        break;\n                    case 'b':\n                        obj = 100;\n                        break;\n                    default:\n                        break;\n                }\n\n                arr.push(obj);\n            }\n            if (type === 't') {\n                arr.unshift({\n                    text: this.title,\n                    top: '8%',\n                    left: '5%',\n                    textStyle: {\n                        color: '#fff',\n                        fontSize: 12\n                    }\n                });\n            }\n            return arr;\n        },\n\n        // 渠道分析\n        setChart() {\n            let option = {\n                tooltip: {\n                    trigger: 'item',\n                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                    },\n                },\n                title: this.setTrenchData('t'),\n                grid: {\n                    top: '15%',\n                    bottom: '3%',\n                    left: '5%',\n                },\n                yAxis: {\n                    data: [],\n                    inverse: true,\n                    axisLabel: {show: false},\n                    axisLine: {show: false},\n                    axisTick: {show: false},\n                },\n                xAxis: {\n                    splitLine: {show: false},\n                    axisLabel: {show: false},\n                    axisLine: {show: false},\n                    axisTick: {show: false},\n                },\n                series: [{\n                    type: 'bar',\n                    silent: true,\n                    barWidth: 15,\n                    barGap: '-100%', // Make series be overlap\n                    itemStyle: {\n                        color: '#1F1E4E'\n                    },\n                    data: this.setTrenchData('b')\n                }, {\n                    type: 'bar',\n                    barWidth:15,\n                    z: 2,\n                    label: {\n                        show: true,\n                        position: \"insideLeft\",\n                        color: \"#fff\",\n                        offset: [0, 1],\n                        fontSize: 9,\n                        formatter: function (params) {\n                            return params.name\n                        },\n                    },\n                    itemStyle: {\n                        color: function (params) {\n                            return params.data.color;\n                        }\n                    },\n                    data: this.setTrenchData('d')\n                }]\n            };\n            let myChart = this.$echarts(this.$el);\n\n            myChart.clear();\n            myChart.resize();\n            myChart.setOption(option);\n        },\n\n    },\n    mounted() {\n        this.setChart();\n    },\n}\n</script>\n"]}]}